name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_storybook:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook

  Docker:
    runs-on: ubuntu-latest
    needs: [build_storybook]
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REACTUSERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          no-cache: true
          tags: ${{ secrets.REACTUSERNAME }}/sm-frontend:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.REACTUSERNAME }}/sm-frontend:latest
          run: |
            echo "Running the Docker image"

  Vercel:
    runs-on: ubuntu-latest
    needs: [build_storybook]
    steps:
      - uses: actions/checkout@v3

      - name: Deploy Storybook to Vercel
        uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: "--prod"

  notify:
    runs-on: ubuntu-latest
    needs: [build_storybook, Docker, Vercel]
    steps:
      - name: Notify success
        if: success()
        run: echo "Build and deployment succeeded!"

      - name: Notify failure
        if: failure()
        run: echo "Build or deployment failed!"
