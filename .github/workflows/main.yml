name: CI-CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook

  Vercel:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Deploy Storybook to Vercel
        run: npx vercel --prod --scope your-scope-name -t ${{ secrets.VERCEL_TOKEN }} -m githubCommitSha=${{ github.sha }} -m githubCommitAuthorName=${{ github.actor }} -m githubCommitAuthorLogin=${{ github.actor }} -m githubDeployment=1 -m githubOrg=${{ github.repository_owner }} -m githubRepo=${{ github.repository }} -m githubCommitOrg=${{ github.repository_owner }} -m githubCommitRepo=${{ github.repository }} -m githubCommitMessage="${{ github.event.head_commit.message }}" -m githubCommitRef=${{ github.ref_name }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  notify:
    runs-on: ubuntu-latest
    needs: [build, Vercel]
    steps:
      - name: Notify success
        if: success()
        run: echo "Build and deployment succeeded!"

      - name: Notify failure
        if: failure()
        run: echo "Build or deployment failed!"
